trigger:
- "*"

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKER_CONTAINER_REGISTRY: 'Decentralized Cloud Docker Hub'
  DOCKER_REPOSITORY_NAME: 'decentralizedcloud/tenant'
  TEST_AND_COVERAGE_DOCKER_FILE_PATH: '$(system.defaultWorkingDirectory)/docker/Dockerfile.testAndCoverage'
  BUILD_DOCKER_FILE_PATH: '$(system.defaultWorkingDirectory)/docker/Dockerfile.build'

steps:
- task: Bash@3
  displayName: "Generating docker tags"
  inputs:
    filePath:  '$(system.defaultWorkingDirectory)/scripts/generate-docker-tag.sh'
    arguments: $(Build.SourceBranch) $(Build.BuildId)

- task: Docker@2
  displayName: Build
  inputs:
    command: 'build'
    Dockerfile: $(BUILD_DOCKER_FILE_PATH)
    buildContext: '$(system.defaultWorkingDirectory)'

- task: Docker@2
  displayName: Test and Coverage
  inputs:
    command: 'build'
    Dockerfile: $(TEST_AND_COVERAGE_DOCKER_FILE_PATH)
    buildContext: '$(system.defaultWorkingDirectory)'
    arguments: '--build-arg CI_SERVICE=$(CI_SERVICE) --build-arg COVERALLS_TOKEN=$(COVERALLS_TOKEN)'

- task: Docker@2
  displayName: Docker Login
  inputs:
    containerRegistry: $(DOCKER_CONTAINER_REGISTRY)
    command: 'login'

- task: Docker@2
  displayName: Push
  inputs:
    containerRegistry: $(DOCKER_CONTAINER_REGISTRY)
    repository: $(DOCKER_REPOSITORY_NAME)
    command: 'buildAndPush'
    Dockerfile: $(BUILD_DOCKER_FILE_PATH)
    buildContext: '$(system.defaultWorkingDirectory)'
    tags: |
      $(GENERATED_DOCKER_TAG_ID)
      $(GENERATED_DOCKER_TAG)

- task: Docker@2
  displayName: Docker Logout
  inputs:
    containerRegistry: $(DOCKER_CONTAINER_REGISTRY)
    command: 'logout'

