// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tenant.proto

package tenant

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// The different error types
type Error int32

const (
	// Indicates the operation was successful
	Error_NO_ERROR Error = 0
	// Indicates the operation fail with unknown error
	Error_UNKNOWN Error = 1
	// Indicates the tenant already exists
	Error_TENANT_ALREADY_EXISTS Error = 2
	// Indicates the tenant does not exist
	Error_TENANT_NOT_FOUND Error = 3
	// Indicates the provided values for he operation were invalid
	Error_BAD_REQUEST Error = 4
)

var Error_name = map[int32]string{
	0: "NO_ERROR",
	1: "UNKNOWN",
	2: "TENANT_ALREADY_EXISTS",
	3: "TENANT_NOT_FOUND",
	4: "BAD_REQUEST",
}

var Error_value = map[string]int32{
	"NO_ERROR":              0,
	"UNKNOWN":               1,
	"TENANT_ALREADY_EXISTS": 2,
	"TENANT_NOT_FOUND":      3,
	"BAD_REQUEST":           4,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}

func (Error) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{0}
}

//*
// The tenant object
type Tenant struct {
	// The tenant name
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tenant) Reset()         { *m = Tenant{} }
func (m *Tenant) String() string { return proto.CompactTextString(m) }
func (*Tenant) ProtoMessage()    {}
func (*Tenant) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{0}
}

func (m *Tenant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tenant.Unmarshal(m, b)
}
func (m *Tenant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tenant.Marshal(b, m, deterministic)
}
func (m *Tenant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tenant.Merge(m, src)
}
func (m *Tenant) XXX_Size() int {
	return xxx_messageInfo_Tenant.Size(m)
}
func (m *Tenant) XXX_DiscardUnknown() {
	xxx_messageInfo_Tenant.DiscardUnknown(m)
}

var xxx_messageInfo_Tenant proto.InternalMessageInfo

func (m *Tenant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//*
// Request to create a new tenant
type CreateTenantRequest struct {
	// The tenant object
	Tenant               *Tenant  `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTenantRequest) Reset()         { *m = CreateTenantRequest{} }
func (m *CreateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTenantRequest) ProtoMessage()    {}
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{1}
}

func (m *CreateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantRequest.Unmarshal(m, b)
}
func (m *CreateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantRequest.Marshal(b, m, deterministic)
}
func (m *CreateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantRequest.Merge(m, src)
}
func (m *CreateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTenantRequest.Size(m)
}
func (m *CreateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantRequest proto.InternalMessageInfo

func (m *CreateTenantRequest) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

//*
// Response contains the result of creating a new tenant
type CreateTenantResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=tenant.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The unique tenant identifier
	TenantID             string   `protobuf:"bytes,3,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTenantResponse) Reset()         { *m = CreateTenantResponse{} }
func (m *CreateTenantResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTenantResponse) ProtoMessage()    {}
func (*CreateTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{2}
}

func (m *CreateTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantResponse.Unmarshal(m, b)
}
func (m *CreateTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantResponse.Marshal(b, m, deterministic)
}
func (m *CreateTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantResponse.Merge(m, src)
}
func (m *CreateTenantResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTenantResponse.Size(m)
}
func (m *CreateTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantResponse proto.InternalMessageInfo

func (m *CreateTenantResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *CreateTenantResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *CreateTenantResponse) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

//* Request to read an existing tenant
type ReadTenantRequest struct {
	// The unique tenant identifier
	TenantID             string   `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadTenantRequest) Reset()         { *m = ReadTenantRequest{} }
func (m *ReadTenantRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTenantRequest) ProtoMessage()    {}
func (*ReadTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{3}
}

func (m *ReadTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTenantRequest.Unmarshal(m, b)
}
func (m *ReadTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTenantRequest.Marshal(b, m, deterministic)
}
func (m *ReadTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTenantRequest.Merge(m, src)
}
func (m *ReadTenantRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTenantRequest.Size(m)
}
func (m *ReadTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTenantRequest proto.InternalMessageInfo

func (m *ReadTenantRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

//*
// Response contains the result of reading an existing tenant
type ReadTenantResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=tenant.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// The tenant object
	Tenant               *Tenant  `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadTenantResponse) Reset()         { *m = ReadTenantResponse{} }
func (m *ReadTenantResponse) String() string { return proto.CompactTextString(m) }
func (*ReadTenantResponse) ProtoMessage()    {}
func (*ReadTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{4}
}

func (m *ReadTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTenantResponse.Unmarshal(m, b)
}
func (m *ReadTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTenantResponse.Marshal(b, m, deterministic)
}
func (m *ReadTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTenantResponse.Merge(m, src)
}
func (m *ReadTenantResponse) XXX_Size() int {
	return xxx_messageInfo_ReadTenantResponse.Size(m)
}
func (m *ReadTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTenantResponse proto.InternalMessageInfo

func (m *ReadTenantResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *ReadTenantResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ReadTenantResponse) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

//*
// Request to update an existing tenant
type UpdateTenantRequest struct {
	// The unique tenant identifier
	TenantID string `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	// The tenant object contains the updated tenant details to update
	Tenant               *Tenant  `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTenantRequest) Reset()         { *m = UpdateTenantRequest{} }
func (m *UpdateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTenantRequest) ProtoMessage()    {}
func (*UpdateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{5}
}

func (m *UpdateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTenantRequest.Unmarshal(m, b)
}
func (m *UpdateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTenantRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTenantRequest.Merge(m, src)
}
func (m *UpdateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTenantRequest.Size(m)
}
func (m *UpdateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTenantRequest proto.InternalMessageInfo

func (m *UpdateTenantRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *UpdateTenantRequest) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

//*
// Response contains the result of updating an existing tenant
type UpdateTenantResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=tenant.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTenantResponse) Reset()         { *m = UpdateTenantResponse{} }
func (m *UpdateTenantResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTenantResponse) ProtoMessage()    {}
func (*UpdateTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{6}
}

func (m *UpdateTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTenantResponse.Unmarshal(m, b)
}
func (m *UpdateTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTenantResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTenantResponse.Merge(m, src)
}
func (m *UpdateTenantResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTenantResponse.Size(m)
}
func (m *UpdateTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTenantResponse proto.InternalMessageInfo

func (m *UpdateTenantResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *UpdateTenantResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

//*
// Request to delete an existing tenant
type DeleteTenantRequest struct {
	// The unique tenant identifier
	TenantID             string   `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTenantRequest) Reset()         { *m = DeleteTenantRequest{} }
func (m *DeleteTenantRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTenantRequest) ProtoMessage()    {}
func (*DeleteTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{7}
}

func (m *DeleteTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTenantRequest.Unmarshal(m, b)
}
func (m *DeleteTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTenantRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTenantRequest.Merge(m, src)
}
func (m *DeleteTenantRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTenantRequest.Size(m)
}
func (m *DeleteTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTenantRequest proto.InternalMessageInfo

func (m *DeleteTenantRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

//*
// Response contains the result of deleting an existing tenant
type DeleteTenantResponse struct {
	// Indicate whether the operation has any error
	Error Error `protobuf:"varint,1,opt,name=error,proto3,enum=tenant.Error" json:"error,omitempty"`
	// Contains error message if the operation was unsuccessful
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTenantResponse) Reset()         { *m = DeleteTenantResponse{} }
func (m *DeleteTenantResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTenantResponse) ProtoMessage()    {}
func (*DeleteTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{8}
}

func (m *DeleteTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTenantResponse.Unmarshal(m, b)
}
func (m *DeleteTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTenantResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTenantResponse.Merge(m, src)
}
func (m *DeleteTenantResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTenantResponse.Size(m)
}
func (m *DeleteTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTenantResponse proto.InternalMessageInfo

func (m *DeleteTenantResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_NO_ERROR
}

func (m *DeleteTenantResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterEnum("tenant.Error", Error_name, Error_value)
	proto.RegisterType((*Tenant)(nil), "tenant.Tenant")
	proto.RegisterType((*CreateTenantRequest)(nil), "tenant.CreateTenantRequest")
	proto.RegisterType((*CreateTenantResponse)(nil), "tenant.CreateTenantResponse")
	proto.RegisterType((*ReadTenantRequest)(nil), "tenant.ReadTenantRequest")
	proto.RegisterType((*ReadTenantResponse)(nil), "tenant.ReadTenantResponse")
	proto.RegisterType((*UpdateTenantRequest)(nil), "tenant.UpdateTenantRequest")
	proto.RegisterType((*UpdateTenantResponse)(nil), "tenant.UpdateTenantResponse")
	proto.RegisterType((*DeleteTenantRequest)(nil), "tenant.DeleteTenantRequest")
	proto.RegisterType((*DeleteTenantResponse)(nil), "tenant.DeleteTenantResponse")
}

func init() { proto.RegisterFile("tenant.proto", fileDescriptor_3d6a2cff6c84df7e) }

var fileDescriptor_3d6a2cff6c84df7e = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcf, 0x4f, 0xa3, 0x40,
	0x14, 0xc7, 0x17, 0xfa, 0x63, 0xbb, 0xaf, 0xb4, 0xcb, 0xbe, 0x76, 0x93, 0x96, 0xed, 0x61, 0xc3,
	0x26, 0x9b, 0xcd, 0x1e, 0x6a, 0xac, 0x67, 0x0f, 0x58, 0x30, 0x21, 0xea, 0x10, 0x07, 0x88, 0xf6,
	0x44, 0xd0, 0x4e, 0x8c, 0x89, 0x42, 0x05, 0xf4, 0xe2, 0xd9, 0x3f, 0xc9, 0xff, 0xcf, 0x74, 0x00,
	0x01, 0x4b, 0x9a, 0x98, 0xf4, 0x36, 0x33, 0xef, 0x7d, 0xbe, 0xf9, 0xbe, 0x1f, 0x00, 0x52, 0xc2,
	0x02, 0x3f, 0x48, 0xa6, 0xab, 0x28, 0x4c, 0x42, 0x6c, 0xa7, 0x37, 0x75, 0x02, 0x6d, 0x87, 0x9f,
	0x10, 0xa1, 0x19, 0xf8, 0xf7, 0x6c, 0x24, 0xfc, 0x16, 0xfe, 0x7d, 0xa3, 0xfc, 0xac, 0x1e, 0xc2,
	0x60, 0x1e, 0x31, 0x3f, 0x61, 0x69, 0x0e, 0x65, 0x0f, 0x8f, 0x2c, 0x4e, 0xf0, 0x2f, 0x64, 0x38,
	0x4f, 0xee, 0xce, 0xfa, 0xd3, 0x4c, 0x3b, 0x4b, 0xcb, 0xc5, 0x9f, 0x61, 0x58, 0xc5, 0xe3, 0x55,
	0x18, 0xc4, 0x0c, 0xff, 0x40, 0x8b, 0x45, 0x51, 0x18, 0x71, 0xbc, 0x3f, 0xeb, 0xe5, 0xb8, 0xb1,
	0x7e, 0xa4, 0x69, 0x0c, 0x55, 0x90, 0xf8, 0xe1, 0x8c, 0xc5, 0xb1, 0x7f, 0xc3, 0x46, 0x22, 0xf7,
	0x55, 0x79, 0x43, 0x05, 0x3a, 0x29, 0x6a, 0xea, 0xa3, 0x06, 0x8f, 0xbf, 0xdf, 0xd5, 0x3d, 0xf8,
	0x41, 0x99, 0xbf, 0xac, 0x3a, 0x2f, 0x03, 0xc2, 0x07, 0xe0, 0x45, 0x00, 0x2c, 0x13, 0xbb, 0x36,
	0x5b, 0x74, 0xad, 0xb1, 0xb5, 0x6b, 0x0b, 0x18, 0xb8, 0xab, 0xe5, 0x46, 0xd3, 0xb7, 0x58, 0x2f,
	0x49, 0x8b, 0x5b, 0xa5, 0x3d, 0x18, 0x56, 0xa5, 0x77, 0x5c, 0xa3, 0xba, 0x0f, 0x03, 0x9d, 0xdd,
	0xb1, 0x4f, 0x78, 0x5f, 0x7b, 0xaa, 0x22, 0x3b, 0xf6, 0xf4, 0x7f, 0x09, 0x2d, 0xce, 0xa0, 0x04,
	0x1d, 0x62, 0x79, 0x06, 0xa5, 0x16, 0x95, 0xbf, 0x60, 0x17, 0xbe, 0xba, 0xe4, 0x84, 0x58, 0x17,
	0x44, 0x16, 0x70, 0x0c, 0x3f, 0x1d, 0x83, 0x68, 0xc4, 0xf1, 0xb4, 0x53, 0x6a, 0x68, 0xfa, 0xc2,
	0x33, 0x2e, 0x4d, 0xdb, 0xb1, 0x65, 0x11, 0x87, 0x20, 0x67, 0x21, 0x62, 0x39, 0xde, 0xb1, 0xe5,
	0x12, 0x5d, 0x6e, 0xe0, 0x77, 0xe8, 0x1e, 0x69, 0xba, 0x47, 0x8d, 0x73, 0xd7, 0xb0, 0x1d, 0xb9,
	0x39, 0x7b, 0x15, 0xa1, 0x97, 0x56, 0x60, 0xb3, 0xe8, 0xe9, 0xf6, 0x9a, 0xa1, 0x09, 0x52, 0x79,
	0xfb, 0xf1, 0x57, 0x5e, 0x41, 0xcd, 0x27, 0xa5, 0x4c, 0xea, 0x83, 0x59, 0x2f, 0xe6, 0x00, 0xc5,
	0x66, 0xe2, 0x38, 0xcf, 0xdd, 0xd8, 0x6f, 0x45, 0xa9, 0x0b, 0x65, 0x22, 0x26, 0x48, 0xe5, 0xe1,
	0x17, 0x7e, 0x6a, 0xb6, 0xad, 0xf0, 0x53, 0xbb, 0x2f, 0x26, 0x48, 0xe5, 0x99, 0x15, 0x52, 0x35,
	0xc3, 0x2f, 0xa4, 0xea, 0xc6, 0x7c, 0xd5, 0xe6, 0xff, 0xa3, 0x83, 0xb7, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0x8e, 0xac, 0x79, 0x9f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TenantServiceClient is the client API for TenantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantServiceClient interface {
	// CreateTenant creates a new tenant
	// request: The request to create a new tenant
	// Returns the result of creating new tenant
	CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error)
	// ReadTenant read an exsiting tenant
	// request: The request to read an esiting tenant
	// Returns the result of reading an exiting tenant
	ReadTenant(ctx context.Context, in *ReadTenantRequest, opts ...grpc.CallOption) (*ReadTenantResponse, error)
	// UpdateTenant update an exsiting tenant
	// request: The request to update an esiting tenant
	// Returns the result of updateing an exiting tenant
	UpdateTenant(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*UpdateTenantResponse, error)
	// DeleteTenant delete an exsiting tenant
	// request: The request to delete an esiting tenant
	// Returns the result of deleting an exiting tenant
	DeleteTenant(ctx context.Context, in *DeleteTenantRequest, opts ...grpc.CallOption) (*DeleteTenantResponse, error)
}

type tenantServiceClient struct {
	cc *grpc.ClientConn
}

func NewTenantServiceClient(cc *grpc.ClientConn) TenantServiceClient {
	return &tenantServiceClient{cc}
}

func (c *tenantServiceClient) CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error) {
	out := new(CreateTenantResponse)
	err := c.cc.Invoke(ctx, "/tenant.TenantService/CreateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) ReadTenant(ctx context.Context, in *ReadTenantRequest, opts ...grpc.CallOption) (*ReadTenantResponse, error) {
	out := new(ReadTenantResponse)
	err := c.cc.Invoke(ctx, "/tenant.TenantService/ReadTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) UpdateTenant(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*UpdateTenantResponse, error) {
	out := new(UpdateTenantResponse)
	err := c.cc.Invoke(ctx, "/tenant.TenantService/UpdateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) DeleteTenant(ctx context.Context, in *DeleteTenantRequest, opts ...grpc.CallOption) (*DeleteTenantResponse, error) {
	out := new(DeleteTenantResponse)
	err := c.cc.Invoke(ctx, "/tenant.TenantService/DeleteTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantServiceServer is the server API for TenantService service.
type TenantServiceServer interface {
	// CreateTenant creates a new tenant
	// request: The request to create a new tenant
	// Returns the result of creating new tenant
	CreateTenant(context.Context, *CreateTenantRequest) (*CreateTenantResponse, error)
	// ReadTenant read an exsiting tenant
	// request: The request to read an esiting tenant
	// Returns the result of reading an exiting tenant
	ReadTenant(context.Context, *ReadTenantRequest) (*ReadTenantResponse, error)
	// UpdateTenant update an exsiting tenant
	// request: The request to update an esiting tenant
	// Returns the result of updateing an exiting tenant
	UpdateTenant(context.Context, *UpdateTenantRequest) (*UpdateTenantResponse, error)
	// DeleteTenant delete an exsiting tenant
	// request: The request to delete an esiting tenant
	// Returns the result of deleting an exiting tenant
	DeleteTenant(context.Context, *DeleteTenantRequest) (*DeleteTenantResponse, error)
}

// UnimplementedTenantServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTenantServiceServer struct {
}

func (*UnimplementedTenantServiceServer) CreateTenant(ctx context.Context, req *CreateTenantRequest) (*CreateTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTenant not implemented")
}
func (*UnimplementedTenantServiceServer) ReadTenant(ctx context.Context, req *ReadTenantRequest) (*ReadTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTenant not implemented")
}
func (*UnimplementedTenantServiceServer) UpdateTenant(ctx context.Context, req *UpdateTenantRequest) (*UpdateTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTenant not implemented")
}
func (*UnimplementedTenantServiceServer) DeleteTenant(ctx context.Context, req *DeleteTenantRequest) (*DeleteTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTenant not implemented")
}

func RegisterTenantServiceServer(s *grpc.Server, srv TenantServiceServer) {
	s.RegisterService(&_TenantService_serviceDesc, srv)
}

func _TenantService_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.TenantService/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).CreateTenant(ctx, req.(*CreateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_ReadTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).ReadTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.TenantService/ReadTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).ReadTenant(ctx, req.(*ReadTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_UpdateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).UpdateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.TenantService/UpdateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).UpdateTenant(ctx, req.(*UpdateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_DeleteTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).DeleteTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.TenantService/DeleteTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).DeleteTenant(ctx, req.(*DeleteTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TenantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tenant.TenantService",
	HandlerType: (*TenantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTenant",
			Handler:    _TenantService_CreateTenant_Handler,
		},
		{
			MethodName: "ReadTenant",
			Handler:    _TenantService_ReadTenant_Handler,
		},
		{
			MethodName: "UpdateTenant",
			Handler:    _TenantService_UpdateTenant_Handler,
		},
		{
			MethodName: "DeleteTenant",
			Handler:    _TenantService_DeleteTenant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tenant.proto",
}
